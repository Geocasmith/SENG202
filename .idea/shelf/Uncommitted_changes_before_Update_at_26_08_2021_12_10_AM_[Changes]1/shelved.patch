Index: src/main/java/backend/database/Database.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package backend.database;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\n/***\r\n * TODO: Make CSV import to the database\r\n * Make it reset the database each time\r\n * Get all of the fields\r\n */\r\npublic class Database {\r\n    private static Connection connection;\r\n    private static boolean notEmpty = false;\r\n    private List<String> columns = Arrays.asList(\"IUCR TEXT\",\"PRIMARYDESCRIPTION TEXT\",\"SECONDARYDESCRIPTION TEXT\",\r\n            \"LOCATIONDESCRIPTION TEXT\",\"ARREST TEXT\", \"DOMESTIC TEXT\",\"BEAT INTEGER\",\"WARD INTEGER\",\"FBICD TEXT\",\r\n            \"XCOORDINATE INTEGER\",\"YCOORDINATE INTEGER\",\"LATITUDE REAL\",\"LONGITUDE REAL\", \"LOCATION TEXT\");\r\n\r\n\r\n\r\n    /**\r\n     * Helper class to establish database connection\r\n     * @throws SQLException\r\n     */\r\n    public void connectDatabase() throws SQLException {\r\n        try {\r\n            Class.forName(\"org.sqlite.JDBC\");\r\n            connection = DriverManager.getConnection(\"jdbc:sqlite:crimeRecords.db\");\r\n            createTable();\r\n        } catch (Exception e) {\r\n            //System.out.println(\"Database connection failed\");\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates java database table\r\n     * @throws SQLException\r\n     */\r\n    public void createTable() throws SQLException {\r\n        Statement state2 = connection.createStatement();\r\n        state2.execute(\"CREATE TABLE CRIMES \" + \"(ID TEXT PRIMARY KEY NOT NULL,\" +\r\n                \"DATE TEXT, \" +\r\n                \"ADDRESS TEXT)\");\r\n        for (int i = 0; i < this.columns.size(); i++){\r\n            Statement state3 = connection.createStatement();\r\n            state3.execute(\"ALTER TABLE CRIMES\\n\" +\r\n                    \"ADD COLUMN \"+this.columns.get(i)+\";\");\r\n        }\r\n        Statement state3 = connection.createStatement();\r\n        state3.execute(\"ALTER TABLE CRIMES\\n\" +\r\n                \"ADD COLUMN IUCR INTEGER;\\n\");\r\n    }\r\n\r\n    /**\r\n     * Inserts row into java database\r\n     * @throws SQLException\r\n     */\r\n    public void insertRows(ArrayList<List<String>>inputs) throws SQLException {\r\n\r\n        for(List column:inputs) {\r\n            connection.setAutoCommit(false);\r\n            PreparedStatement s1 = connection.prepareStatement(\r\n                    \"INSERT OR IGNORE INTO CRIMES (ID, DATE, ADDRESS,IUCR,PRIMARYDESCRIPTION,SECONDARYDESCRIPTION,LOCATIONDESCRIPTION,ARREST,DOMESTIC,BEAT,WARD,FBICD,XCOORDINATE,YCOORDINATE,LATITUDE,LONGITUDE,LOCATION) \" +\r\n                \"VALUES (?, ?, ?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);\");\r\n            s1.setString(1, (String) column.get(0));\r\n            s1.setString(2,(String) column.get(1));\r\n            s1.setString(3,(String) column.get(2));\r\n            s1.setString(4,(String) column.get(3));\r\n            s1.setString(5,(String) column.get(4));\r\n            s1.setString(6,(String) column.get(5));\r\n            s1.setString(7,(String) column.get(6));\r\n            s1.setString(8,(String) column.get(7));\r\n            s1.setString(9,(String) column.get(8));\r\n            String c9= (String) column.get(9);\r\n            if(c9.equals(\"\")){\r\n                s1.setString(10,\"NULL\");\r\n            }else{\r\n                s1.setInt(10,Integer.parseInt(c9));\r\n            }\r\n            String c10= (String) column.get(10);\r\n            if(c10.equals(\"\")){\r\n                s1.setString(10,\"NULL\");\r\n            }else{\r\n                s1.setInt(11,Integer.parseInt(c10));\r\n            }\r\n\r\n            s1.setString(12,(String) column.get(11));\r\n            String c12= (String) column.get(12);\r\n            if(c12.equals(\"\")){\r\n                s1.setString(10,\"NULL\");\r\n            }else{\r\n                s1.setInt(13,Integer.parseInt(c12));\r\n            }\r\n            String c13= (String) column.get(13);\r\n            if(c13.equals(\"\")){\r\n                s1.setString(10,\"NULL\");\r\n            }else{\r\n                s1.setInt(14,Integer.parseInt(c13));\r\n            }\r\n            String c14= (String) column.get(14);\r\n            if(c14.equals(\"\")){\r\n                s1.setString(10,\"NULL\");\r\n            }else{\r\n                s1.setFloat(15,Float.parseFloat(c14));\r\n            }\r\n            String c15= (String) column.get(15);\r\n            if(c15.equals(\"\")){\r\n                s1.setString(10,\"NULL\");\r\n            }else{\r\n                s1.setFloat(16,Float.parseFloat(c15));\r\n            }\r\n\r\n            s1.setString(17,(String) column.get(16));\r\n\r\n            s1.executeUpdate();\r\n            connection.commit();\r\n        }\r\n//        Statement s1 = connection.createStatement();\r\n//        String sql = \"INSERT INTO CRIMES (ID, DATE, ADDRESS,IUCR,PRIMARYDESCRIPTION,SECONDARYDESCRIPTION,LOCATIONDESCRIPTION,ARREST,DOMESTIC,BEAT,WARD,FBICD,XCOORDINATE,YCOORDINATE,LATITUDE,LONGITUDE,LOCATION) \" +\r\n//                \"VALUES ('134', '11/23/2020 03:05:00 PM', '073XX S SOUTH SHORE DR',50,'THEFT','$500 AND UNDER','APARTMENT','N','N',334,7,6,1183633,1851786,41.74848637,-87.60267506,'(41.748486365, -87.602675062)');\";\r\n//        s1.executeUpdate(sql);\r\n//        s1.close();\r\n        //connection.commit();\r\n\r\n    }\r\n\r\n    public void readRows() throws SQLException {\r\n        Statement s2 = connection.createStatement();\r\n        ResultSet rs = s2.executeQuery(\"SELECT * FROM CRIMES;\");\r\n\r\n        while (rs.next()) {\r\n            int id = rs.getInt(\"id\");\r\n            String name = rs.getString(\"name\");\r\n\r\n            System.out.println(\"ID = \" + id);\r\n            System.out.println(\"NAME = \" + name);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/backend/database/Database.java b/src/main/java/backend/database/Database.java
--- a/src/main/java/backend/database/Database.java	
+++ b/src/main/java/backend/database/Database.java	
@@ -57,7 +57,7 @@
      * Inserts row into java database
      * @throws SQLException
      */
-    public void insertRows(ArrayList<List<String>>inputs) throws SQLException {
+    public void insertRows(ArrayList<List<String>> inputs) throws SQLException {
 
         for(List column:inputs) {
             connection.setAutoCommit(false);
Index: src/test/java/backend/CsvWriterTest.java
===================================================================
diff --git a/src/test/java/backend/CsvWriterTest.java b/src/test/java/backend/CsvWriterTest.java
new file mode 100644
--- /dev/null	
+++ b/src/test/java/backend/CsvWriterTest.java	
@@ -0,0 +1,29 @@
+package backend;
+
+import org.junit.jupiter.api.Test;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
+
+
+import com.opencsv.CSVWriter;
+
+
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class CsvWriterTest {
+    @Test
+    public void writeTest() throws IOException {
+        ArrayList<Record> recordsList = new ArrayList<>();
+        Record testRecord1, testRecord2;
+        ArrayList<String> data;
+        data = new ArrayList<>(Arrays.asList("JE163990", "11/23/2020 03:05:00 PM", "073XX S SOUTH SHORE DR", "820", "THEFT", "$500 AND UNDER", "APARTMENT", "N", "N", "334", "7", "6", "", "", "", ""));
+        testRecord1 = new Record(data);
+        recordsList.add(testRecord1);
+        CsvWriter writer = new CsvWriter();
+        writer.write("Test.csv", recordsList);
+    }
+
+}
\ No newline at end of file
Index: .idea/csv-plugin.xml
===================================================================
diff --git a/.idea/csv-plugin.xml b/.idea/csv-plugin.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/csv-plugin.xml	
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CsvFileAttributes">
+    <option name="attributeMap">
+      <map>
+        <entry key="\Test.csv">
+          <value>
+            <Attribute>
+              <option name="separator" value="," />
+            </Attribute>
+          </value>
+        </entry>
+        <entry key="\seng202_2021_crimes_one_year_prior_to_present_5k.csv">
+          <value>
+            <Attribute>
+              <option name="separator" value="," />
+            </Attribute>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: Test.csv
===================================================================
diff --git a/Test.csv b/Test.csv
new file mode 100644
--- /dev/null	
+++ b/Test.csv	
@@ -0,0 +1,1 @@
+"Case Number","Date","Block","IUCR","Primary Description","Secondary Description","Location","Arrest","Domestic","Beat","Ward","FBCID","X-Coordinate","Y-Coordinate","Latitude","Longitude"
Index: .idea/libraries/Maven__com_google_maps_google_maps_services_0_19_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_google_maps_google_maps_services_0_19_0.xml b/.idea/libraries/Maven__com_google_maps_google_maps_services_0_19_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_google_maps_google_maps_services_0_19_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.google.maps:google-maps-services:0.19.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/maps/google-maps-services/0.19.0/google-maps-services-0.19.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/maps/google-maps-services/0.19.0/google-maps-services-0.19.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/google/maps/google-maps-services/0.19.0/google-maps-services-0.19.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_squareup_okhttp3_okhttp_4_9_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_squareup_okhttp3_okhttp_4_9_1.xml b/.idea/libraries/Maven__com_squareup_okhttp3_okhttp_4_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_squareup_okhttp3_okhttp_4_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.squareup.okhttp3:okhttp:4.9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okhttp3/okhttp/4.9.1/okhttp-4.9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okhttp3/okhttp/4.9.1/okhttp-4.9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okhttp3/okhttp/4.9.1/okhttp-4.9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__com_opencsv_opencsv_5_5_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_opencsv_opencsv_5_5_1.xml b/.idea/libraries/Maven__com_opencsv_opencsv_5_5_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_opencsv_opencsv_5_5_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.opencsv:opencsv:5.5.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/opencsv/opencsv/5.5.1/opencsv-5.5.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/opencsv/opencsv/5.5.1/opencsv-5.5.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/opencsv/opencsv/5.5.1/opencsv-5.5.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: SENG202Project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_14\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: junit:junit:4.13.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: tech.tablesaw:tablesaw-core:0.38.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.guava:guava:30.0-jre\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.guava:failureaccess:1.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.code.findbugs:jsr305:3.0.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.checkerframework:checker-qual:3.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.errorprone:error_prone_annotations:2.3.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.j2objc:j2objc-annotations:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-math3:3.6.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: it.unimi.dsi:fastutil:8.3.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.roaringbitmap:RoaringBitmap:0.8.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"RUNTIME\" name=\"Maven: org.roaringbitmap:shims:0.8.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.univocity:univocity-parsers:2.8.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.ibm.icu:icu4j:65.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.github.classgraph:classgraph:4.8.60\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.30\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.xerial:sqlite-jdbc:3.36.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.code.gson:gson:2.8.7\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.7.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-controls:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-controls:win:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-graphics:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-graphics:win:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-base:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-base:win:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-fxml:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-fxml:win:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-web:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-web:win:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-media:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.openjfx:javafx-media:win:14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.maps:google-maps-services:0.19.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.squareup.okhttp3:okhttp:4.9.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.squareup.okio:okio:2.8.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains.kotlin:kotlin-stdlib:1.4.10\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jetbrains:annotations:13.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.opencensus:opencensus-api:0.25.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.grpc:grpc-context:1.25.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-jdk14:1.7.25\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/SENG202Project.iml b/SENG202Project.iml
--- a/SENG202Project.iml	
+++ b/SENG202Project.iml	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_14">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_16">
     <output url="file://$MODULE_DIR$/target/classes" />
     <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
@@ -13,6 +13,13 @@
     <orderEntry type="sourceFolder" forTests="false" />
     <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.13.2" level="project" />
     <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
+    <orderEntry type="library" name="Maven: com.opencsv:opencsv:5.5.1" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-lang3:3.12.0" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-text:1.9" level="project" />
+    <orderEntry type="library" name="Maven: commons-beanutils:commons-beanutils:1.9.4" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.2" level="project" />
+    <orderEntry type="library" name="Maven: commons-collections:commons-collections:3.2.2" level="project" />
+    <orderEntry type="library" name="Maven: org.apache.commons:commons-collections4:4.4" level="project" />
     <orderEntry type="library" name="Maven: tech.tablesaw:tablesaw-core:0.38.3" level="project" />
     <orderEntry type="library" name="Maven: com.google.guava:guava:30.0-jre" level="project" />
     <orderEntry type="library" name="Maven: com.google.guava:failureaccess:1.0.1" level="project" />
Index: .idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_4.xml b/.idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_beanutils_commons_beanutils_1_9_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-beanutils:commons-beanutils:1.9.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-beanutils/commons-beanutils/1.9.4/commons-beanutils-1.9.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n  <modelVersion>4.0.0</modelVersion>\r\n  <groupId>seng202.group10</groupId>\r\n  <artifactId>SENG202Project</artifactId>\r\n  <packaging>jar</packaging>\r\n  <version>1.0-SNAPSHOT</version>\r\n  <name>SENG202Project</name>\r\n  <url>http://maven.apache.org</url>\r\n\r\n  <dependencies>\r\n    <dependency>\r\n      <groupId>junit</groupId>\r\n      <artifactId>junit</artifactId>\r\n      <version>4.13.2</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>com.opencsv</groupId>\r\n      <artifactId>opencsv</artifactId>\r\n      <version>5.5.1</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>tech.tablesaw</groupId>\r\n      <artifactId>tablesaw-core</artifactId>\r\n      <version>0.38.3</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>org.xerial</groupId>\r\n      <artifactId>sqlite-jdbc</artifactId>\r\n      <version>3.36.0.1</version>\r\n    </dependency>\r\n    <dependency>\r\n      <groupId>com.google.code.gson</groupId>\r\n      <artifactId>gson</artifactId>\r\n      <version>2.8.7</version>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>org.junit.jupiter</groupId>\r\n      <artifactId>junit-jupiter</artifactId>\r\n      <version>5.7.2</version>\r\n      <scope>test</scope>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-controls</artifactId>\r\n      <version>14</version>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-graphics</artifactId>\r\n      <version>14</version>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-fxml</artifactId>\r\n      <version>14</version>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>org.openjfx</groupId>\r\n      <artifactId>javafx-web</artifactId>\r\n      <version>14</version>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>com.google.maps</groupId>\r\n      <artifactId>google-maps-services</artifactId>\r\n      <version>0.19.0</version>\r\n    </dependency>\r\n\r\n    <dependency>\r\n      <groupId>org.slf4j</groupId>\r\n      <artifactId>slf4j-jdk14</artifactId>\r\n      <version>1.7.25</version>\r\n    </dependency>\r\n\r\n  </dependencies>\r\n\r\n  <!-- Java version setup -->\r\n  <properties>\r\n    <maven.compiler.source>14</maven.compiler.source>\r\n    <maven.compiler.target>14</maven.compiler.target>\r\n  </properties>\r\n\r\n  <build>\r\n    <resources>\r\n      <resource>\r\n        <directory>src/main/resources</directory>\r\n      </resource>\r\n    </resources>\r\n    <testSourceDirectory>src/test/java</testSourceDirectory>\r\n    <plugins>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-surefire-plugin</artifactId>\r\n        <version>3.0.0-M5</version>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.openjfx</groupId>\r\n        <artifactId>javafx-maven-plugin</artifactId>\r\n        <version>0.0.2</version>\r\n        <configuration>\r\n          <mainClass>seng202.Main</mainClass>\r\n        </configuration>\r\n      </plugin>\r\n      <plugin>\r\n        <groupId>org.apache.maven.plugins</groupId>\r\n        <artifactId>maven-shade-plugin</artifactId>\r\n        <version>3.2.1</version>\r\n        <configuration>\r\n          <transformers>\r\n            <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\r\n              <manifestEntries>\r\n                <Main-Class>backend.App</Main-Class>\r\n                <X-Compile-Source-JDK>14</X-Compile-Source-JDK>\r\n                <X-Compile-Target-JDK>14</X-Compile-Target-JDK>\r\n              </manifestEntries>\r\n            </transformer>\r\n          </transformers>\r\n        </configuration>\r\n        <executions>\r\n          <execution>\r\n            <phase>package</phase>\r\n            <goals>\r\n              <goal>shade</goal>\r\n            </goals>\r\n          </execution>\r\n        </executions>\r\n      </plugin>\r\n    </plugins>\r\n  </build>\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -132,6 +132,14 @@
           </execution>
         </executions>
       </plugin>
+        <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-compiler-plugin</artifactId>
+            <configuration>
+                <source>16</source>
+                <target>16</target>
+            </configuration>
+        </plugin>
     </plugins>
   </build>
 </project>
Index: .idea/libraries/Maven__com_squareup_okio_okio_2_8_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__com_squareup_okio_okio_2_8_0.xml b/.idea/libraries/Maven__com_squareup_okio_okio_2_8_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__com_squareup_okio_okio_2_8_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: com.squareup.okio:okio:2.8.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okio/okio/2.8.0/okio-2.8.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okio/okio/2.8.0/okio-2.8.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/com/squareup/okio/okio/2.8.0/okio-2.8.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_logging_commons_logging_1_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__commons_logging_commons_logging_1_2.xml b/.idea/libraries/Maven__commons_logging_commons_logging_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_logging_commons_logging_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-logging:commons-logging:1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-logging/commons-logging/1.2/commons-logging-1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-logging/commons-logging/1.2/commons-logging-1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-logging/commons-logging/1.2/commons-logging-1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml b/.idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__commons_collections_commons_collections_3_2_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: commons-collections:commons-collections:3.2.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_opencensus_opencensus_api_0_25_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__io_opencensus_opencensus_api_0_25_0.xml b/.idea/libraries/Maven__io_opencensus_opencensus_api_0_25_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_opencensus_opencensus_api_0_25_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.opencensus:opencensus-api:0.25.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/opencensus/opencensus-api/0.25.0/opencensus-api-0.25.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/opencensus/opencensus-api/0.25.0/opencensus-api-0.25.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/opencensus/opencensus-api/0.25.0/opencensus-api-0.25.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__io_grpc_grpc_context_1_25_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__io_grpc_grpc_context_1_25_0.xml b/.idea/libraries/Maven__io_grpc_grpc_context_1_25_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__io_grpc_grpc_context_1_25_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: io.grpc:grpc-context:1.25.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/grpc/grpc-context/1.25.0/grpc-context-1.25.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/io/grpc/grpc-context/1.25.0/grpc-context-1.25.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/io/grpc/grpc-context/1.25.0/grpc-context-1.25.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_commons_commons_lang3_3_12_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_commons_commons_lang3_3_12_0.xml b/.idea/libraries/Maven__org_apache_commons_commons_lang3_3_12_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_commons_commons_lang3_3_12_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.commons:commons-lang3:3.12.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_apache_commons_commons_collections4_4_4.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_commons_commons_collections4_4_4.xml b/.idea/libraries/Maven__org_apache_commons_commons_collections4_4_4.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_commons_commons_collections4_4_4.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.commons:commons-collections4:4.4">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-collections4/4.4/commons-collections4-4.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jetbrains_annotations_13_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_jetbrains_annotations_13_0.xml b/.idea/libraries/Maven__org_jetbrains_annotations_13_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jetbrains_annotations_13_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jetbrains:annotations:13.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/13.0/annotations-13.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/13.0/annotations-13.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/13.0/annotations-13.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/backend/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package backend;\r\nimport com.google.gson.Gson;\r\nimport backend.database.Database;\r\nimport backend.readerwriter.csvReader;\r\nimport com.opencsv.exceptions.CsvValidationException;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\n\r\n/**\r\n * Hello world!\r\n *\r\n */\r\npublic class App \r\n{\r\n    public static void main( String[] args ) throws SQLException, IOException, CsvValidationException {\r\n\r\n\r\n\r\n        MyObject myObject = new MyObject(\"chair\", 3);\r\n        Gson gson = new Gson();\r\n        String jsonString = gson.toJson(myObject);\r\n\r\n        System.out.println(\"myObject = \" + myObject);\r\n        System.out.println(\"myObject GSONOBJECT = \" + jsonString);\r\n        csvReader cs = new csvReader();\r\n\r\n        Database d = new Database();\r\n        d.connectDatabase();\r\n        d.insertRows(cs.read());\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/backend/App.java b/src/main/java/backend/App.java
--- a/src/main/java/backend/App.java	
+++ b/src/main/java/backend/App.java	
@@ -1,12 +1,9 @@
 package backend;
 import com.google.gson.Gson;
 import backend.database.Database;
-import backend.readerwriter.csvReader;
 import com.opencsv.exceptions.CsvValidationException;
 
-import java.io.FileNotFoundException;
 import java.io.IOException;
-import java.sql.ResultSet;
 import java.sql.SQLException;
 
 /**
Index: .idea/libraries/Maven__org_apache_commons_commons_text_1_9.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apache_commons_commons_text_1_9.xml b/.idea/libraries/Maven__org_apache_commons_commons_text_1_9.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apache_commons_commons_text_1_9.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apache.commons:commons-text:1.9">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-text/1.9/commons-text-1.9.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-text/1.9/commons-text-1.9-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apache/commons/commons-text/1.9/commons-text-1.9-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_common_1_4_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_common_1_4_0.xml b/.idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_common_1_4_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_common_1_4_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jetbrains.kotlin:kotlin-stdlib-common:1.4.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-common/1.4.0/kotlin-stdlib-common-1.4.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-common/1.4.0/kotlin-stdlib-common-1.4.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-common/1.4.0/kotlin-stdlib-common-1.4.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_1_4_10.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_1_4_10.xml b/.idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_1_4_10.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_jetbrains_kotlin_kotlin_stdlib_1_4_10.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.jetbrains.kotlin:kotlin-stdlib:1.4.10">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib/1.4.10/kotlin-stdlib-1.4.10.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib/1.4.10/kotlin-stdlib-1.4.10-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib/1.4.10/kotlin-stdlib-1.4.10-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_slf4j_slf4j_jdk14_1_7_25.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_slf4j_slf4j_jdk14_1_7_25.xml b/.idea/libraries/Maven__org_slf4j_slf4j_jdk14_1_7_25.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_slf4j_slf4j_jdk14_1_7_25.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.slf4j:slf4j-jdk14:1.7.25">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-jdk14/1.7.25/slf4j-jdk14-1.7.25.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-jdk14/1.7.25/slf4j-jdk14-1.7.25-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/slf4j/slf4j-jdk14/1.7.25/slf4j-jdk14-1.7.25-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"SENG202Project\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n    <bytecodeTargetLevel>\r\n      <module name=\"SENG202Project\" target=\"14\" />\r\n    </bytecodeTargetLevel>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	
+++ b/.idea/compiler.xml	
@@ -10,7 +10,7 @@
       </profile>
     </annotationProcessing>
     <bytecodeTargetLevel>
-      <module name="SENG202Project" target="14" />
+      <module name="SENG202Project" target="16" />
     </bytecodeTargetLevel>
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/backend/CsvWriter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/backend/CsvWriter.java b/src/main/java/backend/CsvWriter.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/backend/CsvWriter.java	
@@ -0,0 +1,38 @@
+package backend;
+
+import com.opencsv.CSVWriter;
+
+import java.io.FileWriter;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+public class CsvWriter {
+    public void write(String fileName, ArrayList<Record> data) throws IOException {
+        CSVWriter writer = new CSVWriter(new FileWriter(fileName));
+        String[] header = new String[]{"Case Number", "Date", "Block", "IUCR", "Primary Description", "Secondary Description",
+        "Location", "Arrest", "Domestic", "Beat", "Ward", "FBCID", "X-Coordinate", "Y-Coordinate", "Latitude", "Longitude"};
+        List<String[]> rows = new ArrayList<>();
+        rows.add(header);
+        for (int i=0; i < data.size(); i++){
+            rows.add(data.get(i).getCaseNumber());
+            rows.add(data.get(i).getDate());
+            rows.add(data.get(i).getBlock());
+            rows.add(data.get(i).getIucr());
+            rows.add(data.get(i).getPrimaryDescription());
+            rows.add(data.get(i).getSecondaryDescription());
+            rows.add(data.get(i).getLocation());
+            rows.add(data.get(i).getArrest().toString());
+            rows.add(data.get(i).getDomestic().toString());
+            rows.add(String.valueOf(data.get(i).getBeat()));
+            rows.add(String.valueOf(data.get(i).getWard()));
+            rows.add(String.valueOf(data.get(i).getFbicd()));
+            rows.add(String.valueOf(data.get(i).getXcoord()));
+            rows.add(String.valueOf(data.get(i).getYcoord()));
+            rows.add(String.valueOf(data.get(i).getLatitude()));
+            rows.add(String.valueOf(data.get(i).getLongitude()));
+        }
+        writer.writeAll(rows);
+        writer.close();
+    }
+}
